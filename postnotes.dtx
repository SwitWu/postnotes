% \iffalse meta-comment
% \fi
%
% \iffalse
%<*driver>
\documentclass{l3doc}

% Have \GetFileInfo pick up date and version data and used in the
% documentation.
\usepackage{postnotes}

\begin{document}

\DocInput{postnotes.dtx}

\end{document}
%</driver>
%
% \fi
% ^^A Have the Index at 'section' level rather than 'part'.  Otherwise it is
% ^^A just the same definition from 'l3doc.cls'.
% \IndexPrologue{^^A
%   \section*{Index}
%   \markboth{Index}{Index}
%   \addcontentsline{toc}{section}{Index}
%   The italic numbers denote the pages where the corresponding entry is
%   described, numbers underlined point to the definition, all others indicate
%   the places where it is used.^^A
% }
%
%
% \GetFileInfo{postnotes.sty}
%
% \title{^^A
%   The \pkg{postnotes} package^^A
%   \thanks{This file describes \fileversion, released \filedate.}^^A
%   \texorpdfstring{\\{}\medskip{}}{ - }^^A
%   Code documentation^^A
%   \texorpdfstring{\medskip{}}{}^^A
% }
%
% \author{^^A
%   Gustavo Barros^^A
%   \thanks{\url{https://github.com/gusbrs/postnotes}}^^A
% }
%
% \date{\filedate}
%
% \maketitle
%
%
% \tableofcontents
%
%
% \section{Initial setup}
% Start the \pkg{DocStrip} guards.
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention).
%    \begin{macrocode}
%<@@=postnote>
%    \end{macrocode}
%
%
%    \begin{macrocode}
\ProvidesExplPackage {postnotes} {2022-03-24} {0.1.0}
  {Endnotes for LaTeX}
%    \end{macrocode}
%
%
% \subsection{Dependencies}
%
%
%    \begin{macrocode}
\bool_new:N \g_@@_hyperref_bool
\AddToHook{begindocument}
  {
    \IfPackageLoadedTF { hyperref }
      {
        \bool_gset_true:N \g_@@_hyperref_bool
        \cs_new:Npn \theHpostnote { \int_use:N \g_@@_id_int }
      }
      {}
  }
\bool_new:N \g_@@_biblatex_bool
\AddToHook{begindocument}
  {
    \IfPackageLoadedTF { biblatex }
      { \bool_gset_true:N \g_@@_biblatex_bool }
      {}
  }
%    \end{macrocode}
%
%
% \section{data}
%
%    \begin{macrocode}
\int_new:N \g_@@_id_int
\tl_new:N \g_@@_theid_tl
\tl_gset:Nn \g_@@_theid_tl { \int_use:N \g_@@_id_int }


% <note theid>
\cs_new:Npn \@@_data_name:n #1
  { g_@@_ #1 _data_prop }
\cs_generate_variant:Nn \@@_data_name:n { e }

% <note theid><note content>
\cs_new_protected:Npn \@@_store:nn #1#2
  {
    \prop_new:c { \@@_data_name:e {#1} }
    \prop_gput:cnn { \@@_data_name:e {#1} } { type } { note }
    \prop_gput:cnx { \@@_data_name:e {#1} } { mark } { \thepostnote }
    \prop_gput:cnx { \@@_data_name:e {#1} } { chapter } { \thechapter }
    \prop_gput:cnx { \@@_data_name:e {#1} } { section } { \thesection }
    \prop_gput:cnx { \@@_data_name:e {#1} }
      { psectid } { \int_use:N \g_@@_sectid_int }
    \prop_gput:cnn { \@@_data_name:e {#1} } { content } {#2}
  }

% <note theid><note content>
\cs_new_protected:Npn \@@_section_store:nn #1#2
  {
    \prop_new:c { \@@_data_name:e {#1} }
    \prop_gput:cnn { \@@_data_name:e {#1} } { type } { section }
    \prop_gput:cnx { \@@_data_name:e {#1} } { chapter } { \thechapter }
    \prop_gput:cnx { \@@_data_name:e {#1} } { section } { \thesection }
    \prop_gput:cnx { \@@_data_name:e {#1} }
      { psectid } { \int_use:N \g_@@_sectid_int }
    \prop_gput:cnn { \@@_data_name:e {#1} } { content } {#2}
  }

%    \end{macrocode}
%
%
% \section{options}
%
%    \begin{macrocode}
\tl_new:N \l_@@_list_env_tl
\tl_set:Nn \l_@@_list_env_tl {enumerate}

\tl_new:N \l_@@_print_format_tl
\tl_set:Nn \l_@@_print_format_tl { \small }
%    \end{macrocode}
%
%
% \section{postnote}
%
% Different from the traditional \cs{footnotemark} / \cs{footnotetext} system,
% in the context of endnotes, the functionality which corresponds to
% \cs{footnotetext} is simply to store the data to be typeset later.  Hence,
% some of the problems that afflict footnotes do not apply to endnotes.
% Namely, they can be used in ``inner paragraph mode'' (\cs{mbox} etc.), and
% if the ``text'' will be typeset in the same page as the ``mark'' is of
% little concern.
%
% Therefore, both the separation between ``mark'' and ``text'' and the ability
% to set an arbitrary ``mark'' value are of little use for endnotes.  And,
% since they introduce their own set of problems, and quite ponderous ones, we
% are better without them.
%
% One issue that does potentially require some manual adjustment, just as they
% do for \cs{footnotes}, are floats and their ability to wreak havoc in an
% otherwise so well behaved order of counters.  If we received an arbitrary
% value, as the kernel functionality for footnotes and other endnotes packages
% do, this value is expected to the printed as such, hence it must correspond
% to the \texttt{postnote} counter.  But this counter is in the hands of the
% user, and can be reset along the document, thus its uniqueness cannot be
% ensured.  But, for handling case of floats, we don't need the ability to set
% arbitrary values of the mark, we can receive instead an ``offset'', relative
% to the current value of the main counters.  With an offset of this kind we
% can adjust both \texttt{postnote} and \cs{g_@@_id_int}, and also calculate
% an appropriate value for the \pkg{hyperref} anchor.  As a companion to this
% offset optional argument, \cs{pnaddtocounter} is provided, to allow users to
% manually correct the counter sequence, disrupted by a previously issued
% offset, in the proper place.
%
% We don't offer \cs{footnotetext} at all.  But, we offer a stripped down
% version of \cs{footnotemark}, to enable users to have multiple marks for the
% same note.  It receives only an optional argument which is a counter offset,
% as the one of \cs{postnote}.
%
% Note that the offset feature is meant for short range localized adjustments.
% It cannot handle arbitrarily large offsets.  In particular, the offset must
% not cross a postnote section boundary or a boundary across a reset of the
% \texttt{postnote} counter.  Either of these may result in a wrong mark, an
% incorrect or missing pkg{hyperref} anchor, or worse.  This stems from the
% fundamental fact that the \texttt{postnote} counter and \cs{g_@@_id_int} do
% not always walk in tandem.  If they did, we wouldn't need the two of them.
% And at postnote sections or at counter resets, they do deviate, and there's
% not much we can do about it.
%
%

%    \begin{macrocode}
\newcounter { postnote }

\NewDocumentCommand \postnote { O { } m }
  { \@@_note:nn {#1} {#2} }

% <counter offset><note content>
\cs_new_protected:Npn \@@_note:nn #1#2
  {
    \group_begin:
    \tl_if_empty:nF {#1}
      {
        \addtocounter { postnote } { #1 }
        \int_gadd:Nn \g_@@_id_int {#1}
      }
    \int_gincr:N \g_@@_id_int
    \stepcounter { postnote }
    \@@_typeset_mark:xV { \g_@@_theid_tl } \thepostnote
    \@@_store:nn { \g_@@_theid_tl } {#2}
    \tl_if_empty:nF {#1}
      {
        \exp_args:Nnx
          \addtocounter { postnote } { \int_eval:n { - #1 - 1 } }
        \int_gadd:Nn \g_@@_id_int { - #1 - 1 }
      }
    \group_end:
  }

\tl_new:N \l_@@_saved_spacefactor_tl
\bool_new:N \l_@@_manual_mark_bool
% <theid><mark>
\cs_new_protected:Npn \@@_typeset_mark:nn #1#2
  {
    \mode_leave_vertical:
    \if_mode_horizontal:
    \tl_set:Nx \l_@@_saved_spacefactor_tl { \the\spacefactor }
    \nobreak
    \fi:
    \bool_if:NTF \g_@@_hyperref_bool
      {
        \bool_if:NF \l_@@_manual_mark_bool
          {
            \Hy@raisedlink
              { \hyper@anchorstart { postnote. #1 .backref } \hyper@anchorend }
          }
        \hyperlink { postnote. #1 } { \@@_mark_format:n {#2} }
      }
      { \@@_mark_format:n {#2} }
    \if_mode_horizontal:
    \spacefactor \l_@@_saved_spacefactor_tl
    \fi:
    \scan_stop:
  }
\cs_generate_variant:Nn \@@_typeset_mark:nn { xV }
\cs_new_protected:Npn \@@_mark_format:n #1
  { \hbox:n { \@textsuperscript { \normalfont #1 } } }


\NewDocumentCommand \postnotemark { O { } }
  { \@@_mark:n {#1}  }
% <counter offset>
\cs_new_protected:Npn \@@_mark:n #1
  {
    \group_begin:
    \bool_set_true:N \l_@@_manual_mark_bool
    \tl_if_empty:nF {#1}
      {
        \addtocounter { postnote } { #1 }
        \int_gadd:Nn \g_@@_id_int {#1}
      }
    \@@_typeset_mark:xV { \g_@@_theid_tl } \thepostnote
    \tl_if_empty:nF {#1}
      {
        \addtocounter { postnote } { - #1 }
        \int_gadd:Nn \g_@@_id_int { - #1 }
      }
    \group_end:
  }

\NewDocumentCommand \pnaddtocounter { m }
  { \@@_add_to_counter:n {#1} }
% <number>
\cs_new_protected:Npn \@@_add_to_counter:n #1
  {
    \addtocounter { postnote } {#1}
    \int_gadd:Nn \g_@@_id_int {#1}
  }
%    \end{macrocode}
%
%
% \section{postnotesection}
%
%    \begin{macrocode}
\int_new:N \g_@@_sectid_int
\tl_new:N \l_@@_en_type_tl

\NewDocumentCommand \postnotesection { O { } m }
  { \@@_section:nn {#1} {#2} }

\cs_new_protected:Npn \@@_section:nn #1#2
  {
    \int_gincr:N \g_@@_id_int
    \int_gincr:N \g_@@_sectid_int
    \@@_section_store:nn { \g_@@_theid_tl } {#2}
  }
%    \end{macrocode}
%
%
% \section{printpostnotes}
%
%    \begin{macrocode}
\NewDocumentCommand \printpostnotes { O { } }
  { \@@_print_notes:n {#1} }

\int_new:N \g_@@_printid_int
\tl_new:N \g_@@_theprintid_tl
\tl_gset:Nn \g_@@_theprintid_tl { \int_use:N \g_@@_printid_int }
\tl_new:N \l_@@_text_mark_tl
\tl_new:N \l_@@_content_tl
\tl_new:N \l_@@_curr_type_tl
\tl_new:N \l_@@_next_type_tl
\tl_new:N \l_@@_psectid_tl
\tl_new:N \pnthechapter
\tl_new:N \pnthesection

\newcounter { postnote@text }
\newcounter { postnote@psectid }

% <theid><prop><tl var>
\cs_new_protected:Npn \@@_prop_get:nnN #1#2#3
  {
    \prop_get:cnNF { \@@_data_name:e {#1} } {#2} #3
      { \tl_clear:N #3 }
  }

\cs_new_protected:Npn \@@_print_notes:n #1
  {
    \group_begin:
    \chapter{Notes}
    % Keep biblatex happy.
    \bool_if:NT \g_@@_biblatex_bool
      { \toggletrue { blx@footnote } }
    \int_until_do:nNnn { \g_@@_printid_int } = { \g_@@_id_int }
      {
        \int_gincr:N \g_@@_printid_int
        \@@_prop_get:nnN { \g_@@_theprintid_tl }
          { type } \l_@@_curr_type_tl
        \int_compare:nNnTF { \g_@@_printid_int } = { \g_@@_id_int }
          { \tl_set:Nn \l_@@_next_type_tl { close } }
          {
            \@@_prop_get:nnN
              { \int_eval:n { \g_@@_printid_int + 1 } }
              { type } \l_@@_next_type_tl
          }
        \tl_if_eq:NnTF \l_@@_curr_type_tl { section }
          {
            \tl_if_eq:NnT \l_@@_next_type_tl { note }
              {
                \group_begin:
                \@@_prop_get:nnN { \g_@@_theprintid_tl }
                  { chapter } \pnthechapter
                \@@_prop_get:nnN { \g_@@_theprintid_tl }
                  { section } \pnthesection
                \@@_prop_get:nnN { \g_@@_theprintid_tl }
                  { content } \l_@@_content_tl
                \l_@@_content_tl
                \group_end:
                \@@_prop_get:nnN { \g_@@_theprintid_tl }
                  { psectid } \l_@@_psectid_tl
                \exp_args:Nnx \setcounter
                  { postnote@psectid } { \int_eval:n { \l_@@_psectid_tl } }
                \exp_args:Nx \begin { \l_@@_list_env_tl }
                \l_@@_print_format_tl
              }
          }
          { % curr_type = 'note'
            \tl_if_eq:NNF \@currenvir \l_@@_list_env_tl
              {
                \exp_args:Nx \begin { \l_@@_list_env_tl }
                \l_@@_print_format_tl
              }
            \@@_prop_get:nnN { \g_@@_theprintid_tl }
              { mark } \l_@@_text_mark_tl
            \item
              [
                \@@_text_typeset_mark:eV
                  { \g_@@_theprintid_tl }
                  \l_@@_text_mark_tl
              ]
            \group_begin:
            \refstepcounter { postnote@text }
            \cs_set:Npn \@currentcounter { postnote }
            \cs_set:Npx \@currentlabel
              { \p@postnote \l_@@_text_mark_tl }
            \@@_prop_get:nnN { \g_@@_theprintid_tl }
              { content } \l_@@_content_tl
            \l_@@_content_tl
            \group_end:
            \tl_if_eq:NnF \l_@@_next_type_tl { note }
              { \exp_args:Nx \end { \l_@@_list_env_tl } }
          }
        % I don't know if clearing the variable represents any kind of gain,
        % but we don't need it anymore.  So, just in case.
        \prop_gclear:c { \@@_data_name:e { \g_@@_theprintid_tl } }
      }
    % Make sure that, even in transitory states of the label set, we don't
    % leave an unclosed environment.
    \tl_if_eq:NNT \@currenvir \l_@@_list_env_tl
      { \exp_args:Nx \end { \l_@@_list_env_tl } }
    \group_end:
  }

\cs_new:Npn \@@_text_mark_format:n #1 { #1 . }
\cs_new:Npn \@@_text_typeset_mark:nn #1#2
  {
    \bool_if:NTF \g_@@_hyperref_bool
      {
        \Hy@raisedlink { \hyper@anchorstart { postnote. #1 } \hyper@anchorend }
        \hyperlink { postnote. #1 .backref } { \@@_text_mark_format:n {#2} }
      }
      { \@@_text_mark_format:n {#2} }
  }
\cs_generate_variant:Nn \@@_text_typeset_mark:nn {eV}
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
%
% \PrintIndex
%
%
